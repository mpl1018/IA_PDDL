(define (problem V4Problem) (:domain Redflix)

(:objects m1 m2 m3 m4 m5 m6 m7 m8 m9 m10 - media
d0 d1 d2 d3 d4 d5 - day )

(:init
    (antecedent m7 m4)
    (antecedent m1 m8)
    (antecedent m8 m4)
    (parallel m2 m8)
    (wantToWatch m4)
    (watched m6)
    (= (dayNum d0) 0)
    (= (dayNum d1) 1)
    (= (dayNum d2) 2)
    (= (dayNum d3) 3)
    (= (dayNum d4) 4)
    (= (dayNum d5) 5)
    (= (dayMinutesCount d0) 0)
    (= (dayMinutesCount d1) 0)
    (= (dayMinutesCount d2) 0)
    (= (dayMinutesCount d3) 0)
    (= (dayMinutesCount d4) 0)
    (= (dayMinutesCount d5) 0)
    (= (mediaDuration m1) 55)
    (= (mediaDuration m2) 90)
    (= (mediaDuration m3) 53)
    (= (mediaDuration m4) 37)
    (= (mediaDuration m5) 76)
    (= (mediaDuration m6) 63)
    (= (mediaDuration m7) 42)
    (= (mediaDuration m8) 76)
    (= (mediaDuration m9) 49)
    (= (mediaDuration m10) 56)
    (= (firstDayParallelAssignment m1) 1000)
    (= (firstDayParallelAssignment m2) 1000)
    (= (firstDayParallelAssignment m3) 1000)
    (= (firstDayParallelAssignment m4) 1000)
    (= (firstDayParallelAssignment m5) 1000)
    (= (firstDayParallelAssignment m6) 1000)
    (= (firstDayParallelAssignment m7) 1000)
    (= (firstDayParallelAssignment m8) 1000)
    (= (firstDayParallelAssignment m9) 1000)
    (= (firstDayParallelAssignment m10) 1000)
)

(:goal (and
    (forall (?x - media) (imply (wantToWatch ?x) (mediaAsigned ?x)))
    (forall (?x - media) (forall (?y - media) (imply (and (wantToWatch ?x) (or (parallel ?x ?y) (parallel ?y ?x)) (not (watched ?y))  ) (mediaAsigned ?y)) ) )
))

)